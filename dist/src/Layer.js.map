{"version":3,"sources":["../../src/Layer.js"],"names":["Activation","require","Perceptron","Layer","nbInputs","nbOutputs","activation","heaviside","_nbInputs","_nbOutputs","_activation","Error","_perceptrons","i","inputs","length","outputs","feedForward","weights","concat","Array","isArray","slice","splice","module","exports"],"mappings":"AAAA;;;;;;AAEA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;AACA,IAAIC,aAAaD,QAAQ,cAAR,CAAjB;;IAEME,K;AAEF,mBAAYC,QAAZ,EAAsBC,SAAtB,EAAoE;AAAA,YAAnCC,UAAmC,uEAAtBN,WAAWO,SAAW;;AAAA;;AAChE,aAAKC,SAAL,GAAiBJ,QAAjB;AACA,aAAKK,UAAL,GAAkBJ,SAAlB;AACA,aAAKK,WAAL,GAAmBJ,UAAnB;;AAEA,YAAI,KAAKE,SAAL,GAAiB,CAArB,EAAwB;AACpB,kBAAM,IAAIG,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED,YAAI,KAAKF,UAAL,GAAkB,CAAtB,EAAyB;AACrB,kBAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED,YAAI,eAAe,OAAO,KAAKD,WAA/B,EAA4C;AACxC,kBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH;;AAED,aAAKC,YAAL,GAAoB,EAApB;;AAEA;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKJ,UAAzB,EAAqCI,GAArC,EAA0C;AACtC,iBAAKD,YAAL,CAAkBC,CAAlB,IAAuB,IAAIX,UAAJ,CAAe,KAAKM,SAApB,EAA+B,KAAKE,WAApC,CAAvB;AACH;AACJ;;;;oCAEWI,M,EAAQ;AAChB,gBAAIA,OAAOC,MAAP,KAAkB,KAAKP,SAA3B,EAAsC;AAClC,sBAAM,IAAIG,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED,gBAAIK,UAAU,EAAd;;AAEA,iBAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAI,KAAKJ,UAAzB,EAAqCI,GAArC,EAA0C;AACtCG,wBAAQH,CAAR,IAAa,KAAKD,YAAL,CAAkBC,CAAlB,EAAqBI,WAArB,CAAiCH,MAAjC,CAAb;AACH;;AAED,mBAAOE,OAAP;AACH;;;4BAEa;AACV,gBAAIE,UAAU,EAAd;;AAEA,iBAAK,IAAIL,IAAI,CAAb,EAAgBA,IAAI,KAAKJ,UAAzB,EAAqCI,GAArC,EAA0C;AACtCK,0BAAUA,QAAQC,MAAR,CAAe,KAAKP,YAAL,CAAkBC,CAAlB,EAAqBK,OAApC,CAAV;AACH;;AAED,mBAAOA,OAAP;AACH,S;0BAEWA,O,EAAS;AACjB,gBAAI,UAAUE,MAAMC,OAAN,CAAcH,OAAd,CAAV,IAAoCA,QAAQH,MAAR,KAAmB,CAAC,KAAKP,SAAL,GAAiB,CAAlB,IAAuB,KAAKC,UAAvF,EAAmG;AAC/F,sBAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED;AACAO,sBAAUA,QAAQI,KAAR,EAAV;;AAEA,iBAAK,IAAIT,IAAI,CAAb,EAAgBA,IAAI,KAAKJ,UAAzB,EAAqCI,GAArC,EAA0C;AACtC,qBAAKD,YAAL,CAAkBC,CAAlB,EAAqBK,OAArB,GAA+BA,QAAQK,MAAR,CAAe,CAAf,EAAkB,KAAKf,SAAL,GAAiB,CAAnC,CAA/B;AACH;AACJ;;;4BAEY;AACT,mBAAO,KAAKA,SAAZ;AACH;;;4BAEa;AACV,mBAAO,KAAKC,UAAZ;AACH;;;;;;AAGLe,OAAOC,OAAP,GAAiBtB,KAAjB","file":"Layer.js","sourcesContent":["'use strict';\n\nlet Activation = require(\"./Activation\");\nlet Perceptron = require(\"./Perceptron\");\n\nclass Layer {\n\n    constructor(nbInputs, nbOutputs, activation = Activation.heaviside) {\n        this._nbInputs = nbInputs;\n        this._nbOutputs = nbOutputs;\n        this._activation = activation;\n\n        if (this._nbInputs < 1) {\n            throw new Error('Too few inputs define for the Layer.');\n        }\n\n        if (this._nbOutputs < 1) {\n            throw new Error('Too few outputs define for the Layer.');\n        }\n\n        if ('function' !== typeof this._activation) {\n            throw new Error('This is not an activation function for the Layer.');\n        }\n\n        this._perceptrons = [];\n\n        // Generate perceptrons\n        for (let i = 0; i < this._nbOutputs; i++) {\n            this._perceptrons[i] = new Perceptron(this._nbInputs, this._activation);\n        }\n    }\n\n    feedForward(inputs) {\n        if (inputs.length !== this._nbInputs) {\n            throw new Error(\"Too few inputs define for the Layer.\");\n        }\n\n        let outputs = [];\n\n        for (let i = 0; i < this._nbOutputs; i++) {\n            outputs[i] = this._perceptrons[i].feedForward(inputs);\n        }\n\n        return outputs;\n    }\n\n    get weights() {\n        let weights = [];\n\n        for (let i = 0; i < this._nbOutputs; i++) {\n            weights = weights.concat(this._perceptrons[i].weights);\n        }\n\n        return weights;\n    }\n\n    set weights(weights) {\n        if (false === Array.isArray(weights) || weights.length !== (this._nbInputs + 1) * this._nbOutputs) {\n            throw new Error(\"Too few weights define for the Layer.\");\n        }\n\n        // Clone array\n        weights = weights.slice();\n\n        for (let i = 0; i < this._nbOutputs; i++) {\n            this._perceptrons[i].weights = weights.splice(0, this._nbInputs + 1);\n        }\n    }\n\n    get inputs() {\n        return this._nbInputs;\n    }\n\n    get outputs() {\n        return this._nbOutputs;\n    }\n}\n\nmodule.exports = Layer;\n"]}