{"version":3,"sources":["../../src/Network.js"],"names":["Activation","require","Layer","Network","nbLayers","activation","heaviside","_nbLayers","_activation","Array","isArray","length","Error","_nbInputs","_nbOutputs","_layers","i","nbInputs","nbOutputs","inputs","outputs","feedForward","weights","concat","nbWeights","slice","splice","module","exports"],"mappings":"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","file":"Network.js","sourcesContent":["'use strict';\n\nlet Activation = require(\"./Activation\");\nlet Layer = require(\"./Layer\");\n\nclass Network {\n\n    constructor(nbLayers, activation = Activation.heaviside) {\n        this._nbLayers = nbLayers;\n        this._activation = activation;\n\n        if (false === Array.isArray(this._nbLayers) || this._nbLayers.length < 2) {\n            throw new Error('Too few layers define for the Network.');\n        }\n\n        if ('function' !== typeof this._activation) {\n            throw new Error('This is not an activation function for the Network.');\n        }\n\n        this._nbInputs  = this._nbLayers[0];\n        this._nbOutputs = this._nbLayers[this._nbLayers.length - 1];\n        \n        this._layers = [];\n\n        // Generate layers\n        for (let i = 1; i < this._nbLayers.length; i++) {\n            let nbInputs  = this._nbLayers[i - 1];\n            let nbOutputs = this._nbLayers[i];\n\n            this._layers[i - 1] = new Layer(nbInputs, nbOutputs, this._activation);\n        }\n    }\n\n    feedForward(inputs) {\n        if (false === Array.isArray(inputs) || inputs.length !== this._nbInputs) {\n            throw new Error(\"Too few inputs define for the Network.\");\n        }\n\n        let outputs = inputs;\n\n        for (let i = 0; i < this._nbLayers.length - 1; i++) {\n            outputs = this._layers[i].feedForward(outputs);\n        }\n\n        return outputs;\n    }\n\n    get weights() {\n        let weights = [];\n\n        for (let i = 0; i < this._nbLayers.length - 1; i++) {\n            weights = weights.concat(this._layers[i].weights);\n        }\n\n        return weights;\n    }\n\n    set weights(weights) {\n        let nbWeights = 0;\n\n        for (let i = 1; i < this._nbLayers.length; i++) {\n            let nbInputs = this._nbLayers[i - 1];\n            let nbOutputs = this._nbLayers[i];\n\n            nbWeights += (nbInputs + 1) * nbOutputs;\n        }\n\n        if (false === Array.isArray(weights) || weights.length !== nbWeights) {\n            throw new Error(\"Too few weights define for the Layer.\");\n        }\n\n        // Clone array\n        weights = weights.slice();\n\n        for (let i = 1; i < this._nbLayers.length; i++) {\n            let nbInputs = this._nbLayers[i - 1];\n            let nbOutputs = this._nbLayers[i];\n\n            this._layers[i - 1].weights = weights.splice(0, (nbInputs + 1) * nbOutputs);\n        }\n    }\n\n    get inputs() {\n        return this._nbInputs;\n    }\n\n    get outputs() {\n        return this._nbOutputs;\n    }\n\n    get layers() {\n        return this._nbLayers.length - 1;\n    }\n}\n\nmodule.exports = Network;\n"]}