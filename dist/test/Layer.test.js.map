{"version":3,"sources":["../../test/Layer.test.js"],"names":["testCase","require","Layer","module","exports","test","layer","equal","inputs","outputs","feedForward","length","done","Array","throws","weights","deepEqual","and_or","not","XOR","result"],"mappings":"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","file":"Layer.test.js","sourcesContent":["'use strict';\n\nlet testCase  = require('nodeunit').testCase;\n\nlet Layer = require(\"../src/Layer\");\n\nmodule.exports = testCase({\n    'Layer - Instantiation one output': function (test) {\n        // Instantiation\n        let layer = new Layer(2, 1);\n\n        test.equal(layer.inputs,  2);\n        test.equal(layer.outputs, 1);\n\n        test.equal(layer.feedForward([1, 1]).length, 1);\n\n        test.done();\n    },\n    'Layer - Instantiation 5 outputs': function (test) {\n        // Instantiation\n        let layer = new Layer(10, 5);\n\n        test.equal(layer.inputs,  10);\n        test.equal(layer.outputs, 5);\n\n        test.equal(layer.feedForward(new Array(10)).length, 5);\n\n        test.done();\n    },\n    'Layer - Instantiation wrong parameter inputs': function (test) {\n        // Instantiation\n        test.throws(function() {\n            new Layer(0, 1);\n        });\n        test.done();\n    },\n    'Layer - Instantiation wrong parameter outputs': function (test) {\n        // Instantiation\n        test.throws(function() {\n            new Layer(1, 0);\n        });\n        test.done();\n    },\n    'Layer - Instantiation wrong parameter activation': function (test) {\n        // Instantiation\n        test.throws(function() {\n            new Layer(2, 1, null);\n        });\n        test.done();\n    },\n    'Layer - OR logic gate': function (test) {\n        // Instantiation\n        let layer = new Layer(2, 1);\n\n        layer.weights = [0.5, 0.5, -0.5]; // 2 inputs, 1 bias\n\n        test.deepEqual(layer.feedForward([0, 0]), [0]);\n        test.deepEqual(layer.feedForward([0, 1]), [1]);\n        test.deepEqual(layer.feedForward([1, 0]), [1]);\n        test.deepEqual(layer.feedForward([1, 1]), [1]);\n\n        test.done();\n    },\n    'Layer - AND logic gate': function (test) {\n        // Instantiation\n        let layer = new Layer(2, 1);\n\n        layer.weights = [0.3, 0.3, -0.5]; // 2 inputs, 1 bias\n\n        test.deepEqual(layer.feedForward([0, 0]), [0]);\n        test.deepEqual(layer.feedForward([0, 1]), [0]);\n        test.deepEqual(layer.feedForward([1, 0]), [0]);\n        test.deepEqual(layer.feedForward([1, 1]), [1]);\n\n        test.done();\n    },\n    'Layer - NOT logic gate': function (test) {\n        // Instantiation\n        let layer = new Layer(1, 1);\n\n        layer.weights = [-2, 1]; // 1 input, 1 bias\n\n        test.deepEqual(layer.feedForward([0]), [1]);\n        test.deepEqual(layer.feedForward([1]), [0]);\n\n        test.done();\n    },\n    'Layer - NOT logic gate for XOR': function (test) {\n        // Instantiation\n        let layer = new Layer(2, 1);\n\n        layer.weights = [-2, 1, -0.1]; // 2 inputs, 1 bias\n\n        test.deepEqual(layer.feedForward([0, 0]), [0]);\n        test.deepEqual(layer.feedForward([0, 1]), [1]);\n        test.deepEqual(layer.feedForward([1, 1]), [0]);\n\n        test.done();\n    },\n    'Layer - XOR logic gate using 2 layers': function (test) {\n        // Instantiation\n        let and_or  = new Layer(2, 2);\n        let not = new Layer(2, 1);\n\n        and_or.weights  = [0.3, 0.3, -0.5, 0.5, 0.5, -0.5];\n        not.weights = [ -2, 1, -0.1];\n\n        // Create the XOR function\n        let XOR = function(inputs) {\n\n            let result = and_or.feedForward(inputs);\n\n            return not.feedForward(result);\n        };\n\n        test.deepEqual(XOR([0, 0]), [0]);\n        test.deepEqual(XOR([0, 1]), [1]);\n        test.deepEqual(XOR([1, 0]), [1]);\n        test.deepEqual(XOR([1, 1]), [0]);\n\n        test.done();\n    }\n});"]}